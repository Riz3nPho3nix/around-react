{"version":3,"sources":["components/Header.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","images/logo-white.svg"],"names":["Header","className","src","logo","alt","PopupWithForm","props","name","isOpen","onClick","close","action","noValidate","title","children","ImagePopup","card","link","api","baseURL","headers","this","_baseURL","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","catch","err","console","log","all","getProfileInfo","getInitialCards","data","method","body","JSON","stringify","about","cardID","url","avatar","authorization","Card","style","backgroundImage","onCardClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","onEditAvatar","aria-label","onEditProfile","onAddPlace","map","key","_id","isEditProfileOpen","onClose","type","minLength","maxLength","required","isAddPlaceOpen","placeholder","isEditAvatarOpen","isImagePopupOpen","selectedCard","Footer","App","isEditProfileModalOpen","toggleProfileModal","isAddPlaceModalOpen","togglePlaceModal","isEditAvatarModalOpen","toggleAvatarModal","isImagePopupModalOpen","toggleImagePopup","setSelectedCard","handleCardClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d46feab4.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo-white.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n    <header className=\"header\">\r\n        <img src={logo} alt=\"Around the US logo\" className=\"header__logo\" />\r\n    </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { render } from '@testing-library/react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return(\r\n<div className={`${props.name} modal ${props.isOpen ? 'modal__open' : ''}`} onClick={props.close}>\r\n        <div className=\"modal__window\">\r\n          <button className=\"modal__close link\" onClick={props.close}></button>\r\n          <form action=\"submit\" className=\"modal__form\" name={`${props.name}`} noValidate>\r\n            <h2 className=\"modal__heading\">{props.title}</h2>\r\n            {props.children}\r\n            <button className=\"modal__button button\">Save</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`display modal ${props.isOpen ? 'modal__open' : ''}`} onClick={props.close}>\r\n        <div className=\"modal__window display__window\">\r\n          <button className=\"modal__close link\" onClick={props.close}></button>\r\n          <figure>\r\n            <img className=\"display__image\" src={`${props.card.link}`} />\r\n            <figcaption className=\"display__caption\">{props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import { data } from \"autoprefixer\";\r\n\r\nclass Api {\r\n  constructor({baseURL, headers}) {\r\n    this._baseURL = baseURL;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    return (res.ok ? res.json() : Promise.reject(`Error: ${res.status}`));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseURL}/cards`, {\r\n      headers: this._headers\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  getProfileInfo() {\r\n    return fetch(`${this._baseURL}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  getAppInfo() {\r\n    return Promise.all([this.getProfileInfo(), this.getInitialCards()])\r\n  }\r\n\r\n  setProfileInfo(data) {\r\n    return fetch(`${this._baseURL}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  createCard(data) {\r\n    return fetch(`${this._baseURL}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  deleteCard(cardID) {\r\n    return fetch(`${this._baseURL}/cards/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  cardLike(cardID) {\r\n    return fetch(`${this._baseURL}/cards/likes/${cardID}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  cardUnlike(cardID) {\r\n    return fetch(`${this._baseURL}/cards/likes/${cardID}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  updateAvatar(url) {\r\n    return fetch(`${this._baseURL}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    })\r\n    .then ( res => this._checkResponse(res))\r\n    .catch( err => console.log(err))\r\n  }\r\n}\r\n\r\nconst api = new Api({baseURL: \"https://around.nomoreparties.co/v1/group-3\",\r\n  headers: {authorization: \"85b65791-c6f6-4567-a451-befb44448843\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <li className=\"card\">\r\n      <div className=\"card__image\" style={{backgroundImage: `url(${props.card.link})` }} onClick={props.onCardClick}>\r\n        <button className=\"card__delete-btn\"></button>\r\n      </div>\r\n      <div className=\"card__label\">\r\n        <h2 className=\"card__heading\">{props.card.name}</h2>\r\n        <div className=\"card__likes\">\r\n          <button className=\"card__heart\"></button>\r\n          <p className=\"card__like-count\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport api from '../utils/Api.js';\r\nimport Card from './Card.js';\r\n\r\nfunction Main(props) {\r\n\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState('');\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getProfileInfo()\r\n    .then ((data) => {\r\n      setUserName(data.name);\r\n      setUserDescription(data.about);\r\n      setUserAvatar(data.avatar);\r\n    });\r\n  });\r\n\r\n  api.getInitialCards()\r\n  .then (cards => {setCards(cards)});\r\n\r\n  return (\r\n    <main className=\"main\">\r\n        <section className=\"profile\">\r\n            <div className=\"profile__avatar\">\r\n              <img alt=\"Profile portrait\" className=\"profile__picture\" src={`${userAvatar}`}/>\r\n              <button className=\"profile__overlay\" onClick={props.onEditAvatar}></button>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n              <h1 className=\"profile__name\">{userName}</h1>\r\n              <p className=\"profile__job\">{userDescription}</p>\r\n              <button className=\"profile__edit link\" aria-label=\"Edit Profile\" onClick={props.onEditProfile}></button>\r\n            </div>\r\n            <button className=\"profile__add-btn link\" onClick={props.onAddPlace}></button>\r\n        </section>\r\n        <ul className=\"cards\">\r\n          {cards.map((card) => {\r\n            return <Card key={card._id} card={card} onCardClick={() => {props.onCardClick(card)}} />\r\n          })}\r\n        </ul>\r\n      <PopupWithForm name='profile-edit' title='Edit Profile' isOpen={props.isEditProfileOpen} close={props.onClose}>\r\n        <input className='modal__input' name='name' type=\"text\" minLength=\"2\" maxLength=\"40\" required />\r\n        <input className='modal__input' name='about' type=\"text\" minLength=\"2\" maxLength=\"200\" required />\r\n      </PopupWithForm>\r\n{/*   <div className=\"profile-edit modal\">\r\n        <div className=\"modal__window\">\r\n          <button className=\"modal__close link\"></button>\r\n          <form action=\"submit\" className=\"modal__form\" noValidate>\r\n            <h2 className=\"modal__heading\">Edit Profile</h2>\r\n            <label className=\"modal__label\">\r\n            <input id=\"profile-name\" className=\"modal__input set_name\" type=\"text\" name=\"name\" minLength=\"2\" maxLength=\"40\" required />\r\n            <span id=\"profile-name-error\" className=\"modal__error\"></span>\r\n            </label>\r\n            <label className=\"modal__label\">\r\n            <input id=\"profile-job\" className=\"modal__input set_job\" type=\"text\" name=\"about\" minLength=\"2\" maxLength=\"200\" required />\r\n            <span id=\"profile-job-error\" className=\"modal__error\"></span>\r\n            </label>\r\n            <button className=\"modal__button button\">Save</button>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <PopupWithForm name='new-card' title='New Place' isOpen={props.isAddPlaceOpen} close={props.onClose}>\r\n        <input className='modal__input' name='name' type=\"text\" placeholder=\"Title\" minLength=\"1\" maxLength=\"30\" required />\r\n        <input className='modal__input' name='link' type=\"url\" placeholder=\"Image link\" required />\r\n      </PopupWithForm>\r\n{/*   <div className=\"new-card modal\">\r\n        <div className=\"modal__window\">\r\n          <button className=\"modal__close link\"></button>\r\n          <form action=\"submit\" className=\"modal__form\" noValidate>\r\n            <h2 className=\"modal__heading\">New place</h2>\r\n            <label className=\"modal__label\">\r\n            <input id=\"card-title\" className=\"modal__input location\" type=\"text\" name=\"name\" placeholder=\"Title\" minLength=\"1\" maxLength=\"30\" required />\r\n            <span id=\"card-title-error\" className=\"modal__error\"></span>\r\n            </label>\r\n            <label className=\"modal__label\">\r\n            <input id=\"card-url\" className=\"modal__input image-path\" type=\"url\" name=\"link\" placeholder=\"Image link\" required />\r\n            <span id=\"card-url-error\" className=\"modal__error\"></span>\r\n            </label>\r\n            <button className=\"modal__button button\">Save</button>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <PopupWithForm name='new-avatar' title='Change Profile Picture' isOpen={props.isEditAvatarOpen} close={props.onClose}>\r\n        <input className='modal__input' name='avatar' type=\"url\" placeholder=\"Image link\" required />\r\n      </PopupWithForm>\r\n{/*   <div className=\"new-avatar modal\">\r\n        <div className=\"modal__window\">\r\n          <button className=\"modal__close link\"></button>\r\n          <form action=\"submit\" className=\"modal__form\" noValidate>\r\n            <h2 className=\"modal__heading\">Change profile picture</h2>\r\n            <label className=\"modal__label\">\r\n            <input id=\"avatar-url\" className=\"modal__input avatar-image\" type=\"url\" name=\"avatar\" placeholder=\"Image link\" required />\r\n            <span id=\"avatar-url-error\" className=\"modal__error\"></span>\r\n            </label>\r\n            <button className=\"modal__button button\">Save</button>\r\n          </form>\r\n        </div>\r\n      </div> */} \r\n      \r\n{/*   <div className=\"delete-card modal\">\r\n        <div className=\"modal__window\">\r\n          <button className=\"modal__close link\"></button>\r\n          <form action=\"submit\" className=\"modal__form\" noValidate>\r\n            <h2 className=\"modal__heading\">Are you sure?</h2>\r\n            <input type=\"hidden\" className=\"modal__input card-id\" name=\"id\" />\r\n            <button className=\"modal__button button\">Yes</button>\r\n          </form>\r\n        </div>\r\n      </div>  */}\r\n      <ImagePopup isOpen={props.isImagePopupOpen} close={props.onClose} card={props.selectedCard} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Brian Wilson</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './Header.js'\nimport Main from './Main.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n  const [isEditProfileModalOpen, toggleProfileModal] = React.useState(false);\n  const [isAddPlaceModalOpen, togglePlaceModal] = React.useState(false);\n  const [isEditAvatarModalOpen, toggleAvatarModal] = React.useState(false);\n  const [isImagePopupModalOpen, toggleImagePopup] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n\n  function handleEditAvatarClick() {\n   toggleAvatarModal(true);\n  }\n\n  function handleEditProfileClick() {\n   toggleProfileModal(true);\n  }\n \n  function handleAddPlaceClick() {\n   togglePlaceModal(true);\n  }\n\n  function closeAllPopups() {\n   toggleProfileModal(false);\n   togglePlaceModal(false);\n   toggleAvatarModal(false);\n   setSelectedCard('');\n   toggleImagePopup(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    toggleImagePopup(true);\n  }\n\n\n  return (\n    <div className=\"content\">\n    <div className=\"page\">\n      <Header />\n      <Main \n      isEditProfileOpen={isEditProfileModalOpen}\n      onEditProfile={handleEditProfileClick}\n      isAddPlaceOpen={isAddPlaceModalOpen}\n      onAddPlace={handleAddPlaceClick}\n      isEditAvatarOpen={isEditAvatarModalOpen}\n      onEditAvatar={handleEditAvatarClick}\n      isImagePopupOpen={isImagePopupModalOpen}\n      onCardClick={(card) => handleCardClick(card)}\n      selectedCard={selectedCard}\n      onClose={closeAllPopups}\n      />\n      <Footer />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-white.3e6893cd.svg\";"],"sourceRoot":""}